buildscript {

    repositories {
        mavenCentral()
    }
}

apply plugin: 'com.android.application'

repositories {
    mavenCentral()
    maven {
        url 'https://github.com/Goddchen/mvn-repo/raw/master/'
    }
    maven {
        url "https://repository-achartengine.forge.cloudbees.com/snapshot/"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar', exclude: 'commons-codec-1.3.jar')
    compile 'com.github.castorflex.verticalviewpager:library:19.0.1'
    compile 'it.sephiroth.android.library.horizontallistview:hlistview:1.2.2'
    compile 'com.google.android.gms:play-services:5.+'
    compile 'com.android.support:gridlayout-v7:18.0.+'
}


android {

    apply from: "../build_tools_version.gradle"

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    sourceSets {
        main {

            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }

    defaultConfig {
    	applicationId "eu.janmuller.application.salesmenapp"
        minSdkVersion 16
        targetSdkVersion 20
        versionCode 102
        versionName "1.8.2"
    }


        signingConfigs {
            release {
                storeFile file("../keystore")
                storePassword "salesmanapp"
                keyAlias "salesmanapp"
                keyPassword "salesmanapp"
            }
        }

    buildTypes {
        release {
            zipAlign true
            signingConfig signingConfigs.release
            runProguard true
            proguardFile 'proguard.cfg'
        }

        releaseDebug {
            zipAlign true
            debuggable true
            signingConfig signingConfigs.release
        }

        applicationVariants.all { variant ->
            def file = variant.outputFile
            variant.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
        }
    }

    productFlavors {
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}
